// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  role      String   @default("USER")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Event {
  id                  String   @id @default(cuid())
  name                String
  description         String?
  startTime           DateTime @map("start_time")
  endTime             DateTime @map("end_time")
  accessCode          String?  @map("access_code")
  isActive            Boolean  @default(false) @map("is_active")
  librasEnabled       Boolean  @default(false) @map("libras_enabled")
  translationEnabled  Boolean  @default(false) @map("translation_enabled")
  maxParticipants     Int?     @map("max_participants")
  createdAt           DateTime @default(now()) @map("created_at")
  updatedAt           DateTime @updatedAt @map("updated_at")

  streams Stream[]
  polls   Poll[]

  @@map("events")
}

model Stream {
  id           String  @id @default(cuid())
  eventId      String  @map("event_id")
  language     String
  languageCode String  @map("language_code")
  flag         String
  streamType   String  @default("AUDIO") @map("stream_type")
  url          String
  isOriginal   Boolean @default(false) @map("is_original")
  quality      String  @default("GOOD")
  enabled      Boolean @default(true)
  inputType    String  @default("direct") @map("input_type")
  flueKey      String? @map("flue_key")
  mode         String  @default("audio-only")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  event Event @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@unique([eventId, languageCode])
  @@map("streams")
}

model Poll {
  id        String   @id @default(cuid())
  eventId   String   @map("event_id")
  question  String
  options   String[]
  status    String   @default("DRAFT")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  event Event @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@map("polls")
}